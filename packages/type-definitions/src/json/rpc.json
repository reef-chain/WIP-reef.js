{
    "oracle": {
        "getValue": {
            "description": "Retrieves the oracle value for a given key.",
            "params": [
                {
                    "name": "providerId",
                    "type": "RpcDataProviderId"
                },
                {
                    "name": "key",
                    "type": "OracleKey"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Option<TimestampedValue>",
            "isSubscription": false,
            "jsonrpc": "oracle_getValue",
            "method": "getValue",
            "section": "oracle"
        },
        "getAllValues": {
            "description": "Retrieves all oracle values.",
            "params": [
                {
                    "name": "providerId",
                    "type": "RpcDataProviderId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Vec<(OracleKey, Option<TimestampedValue>)>",
            "isSubscription": false,
            "jsonrpc": "oracle_getAllValues",
            "method": "getAllValues",
            "section": "oracle"
        }
    },
    "tokens": {
        "queryExistentialDeposit": {
            "description": "Query Existential Deposit for a given currency.",
            "params": [
                {
                    "name": "currencyId",
                    "type": "CurrencyId"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "NumberOrHex",
            "isSubscription": false,
            "jsonrpc": "tokens_queryExistentialDeposit",
            "method": "queryExistentialDeposit",
            "section": "tokens"
        }
    },
    "evm": {
        "call": {
            "description": "eth call",
            "params": [
                {
                    "name": "data",
                    "type": "CallRequest"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "Raw",
            "isSubscription": false,
            "jsonrpc": "evm_call",
            "method": "call",
            "section": "evm"
        },
        "estimateGas": {
            "description": "eth estimateGas",
            "params": [
                {
                    "name": "data",
                    "type": "CallRequest"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "u128",
            "isSubscription": false,
            "jsonrpc": "evm_estimateGas",
            "method": "estimateGas",
            "section": "evm"
        },
        "estimateResources": {
            "description": "eth estimateResources",
            "params": [
                {
                    "name": "from",
                    "type": "H160"
                },
                {
                    "name": "unsignedExtrinsic",
                    "type": "Bytes"
                },
                {
                    "name": "at",
                    "type": "BlockHash",
                    "isHistoric": true,
                    "isOptional": true
                }
            ],
            "type": "EstimateResourcesResponse",
            "isSubscription": false,
            "jsonrpc": "evm_estimateResources",
            "method": "estimateResources",
            "section": "evm"
        }
    }
}